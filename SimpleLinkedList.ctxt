#BlueJ class context
comment0.target=SimpleLinkedList
comment0.text=\r\n\ Represents\ a\ linked\ list\ of\ ints\r\n
comment1.params=val
comment1.target=Node(int)
comment1.text=\r\n\ Creates\ a\ node\ containing\ the\ given\ value\r\n\ (and\ null\ as\ the\ next\ and\ previous)\r\n\ @param\ val\ the\ value\ the\ node\ should\ contain\r\n
comment10.params=item
comment10.target=void\ add(int)
comment10.text=\r\n\ Adds\ the\ given\ item\ to\ the\ end\ of\ the\ list\r\n\ @param\ val\ the\ value\ to\ add\ to\ the\ list\r\n
comment11.params=index\ item
comment11.target=void\ add(int,\ int)
comment11.text=\r\n\ Adds\ the\ given\ item\ to\ the\ list\ at\ the\ given\ index\r\n\ @param\ index\ the\ location\ for\ the\ new\ item\r\n\ @param\ val\ the\ value\ to\ add\ to\ the\ list\r\n
comment12.params=index
comment12.target=int\ remove(int)
comment12.text=\r\n\ Remove\ the\ item\ at\ the\ given\ position\ from\ the\ list\r\n\ @return\ the\ removed\ item\r\n
comment13.params=index
comment13.target=int\ get(int)
comment13.text=\r\n\ Gets\ the\ item\ at\ the\ given\ index\r\n\ @param\ index\ the\ position\ of\ the\ item\ to\ get\r\n\ @return\ the\ item\ at\ the\ given\ position\r\n
comment14.params=index\ val
comment14.target=void\ set(int,\ int)
comment14.text=\r\n\ Replaces\ the\ item\ at\ the\ given\ index\ with\ the\ given\ value\r\n\ @param\ index\ the\ position\ in\ the\ list\ to\ replace\r\n\ @param\ val\ the\ value\ to\ put\ in\ the\ list\r\n
comment15.params=
comment15.target=SimpleListIterator\ begin()
comment15.text=\r\n\ @return\ an\ iterator\ positioned\ just\ before\ the\ first\ element\r\n
comment16.params=
comment16.target=SimpleListIterator\ end()
comment16.text=\r\n\ @return\ an\ iterator\ positioned\ just\ after\ the\ last\ element\r\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\r\n\ @return\ a\ string\ representing\ the\ list\r\n
comment2.params=
comment2.target=int\ getValue()
comment2.text=\r\n\ @return\ the\ value\ contained\ within\ the\ node\r\n
comment3.params=val
comment3.target=void\ setValue(int)
comment3.text=\r\n\ Replace\ the\ value\ in\ the\ node\ with\ the\ given\ value\r\n\ @param\ val\ the\ new\ value\ for\ the\ node\r\n
comment4.params=
comment4.target=Node\ getNext()
comment4.text=\r\n\ @return\ the\ next\ node\ in\ the\ list\r\n
comment5.params=
comment5.target=Node\ getPrevious()
comment5.text=\r\n\ @return\ the\ previous\ node\ in\ the\ list\r\n
comment6.params=n
comment6.target=void\ setNext(Node)
comment6.text=\r\n\ Set\ the\ node's\ reference\ to\ the\ next\ node\ in\ the\ list\r\n\ @param\ the\ new\ next\ node\r\n
comment7.params=n
comment7.target=void\ setPrevious(Node)
comment7.text=\r\n\ Set\ the\ node's\ reference\ to\ the\ previous\ node\ in\ the\ list\r\n\ @param\ the\ new\ previous\ node\r\n
comment8.params=
comment8.target=SimpleLinkedList()
comment8.text=\r\n\ Create\ an\ empty\ list\r\n
comment9.params=index
comment9.target=Node\ findNode(int)
comment9.text=\r\n\ Finds\ the\ node\ at\ the\ given\ index\r\n\ @param\ index\ the\ index\ of\ the\ node\ to\ get\r\n\ @return\ the\ node\ at\ the\ given\ index\r\n
numComments=18
