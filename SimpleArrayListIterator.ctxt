#BlueJ class context
comment0.target=SimpleArrayListIterator
comment0.text=\r\n\ An\ iterator\ for\ array-backed\ lists\ that\ allows\r\n\ bidirectional\ movement,\ reading,\ writing,\ cloning\r\n\ and\ comparison.\r\n
comment1.params=list\ index
comment1.target=SimpleArrayListIterator(SimpleArrayList,\ int)
comment1.text=\r\n\ Create\ the\ iterator\r\n\ @param\ list\ the\ list\ the\ iterator\ points\ to\r\n\ @param\ index\ the\ index\ the\ iterator\ should\ point\ to\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ @return\ a\ string\ containing\ the\ index\ the\ iterator\ is\ pointing\ to\r\n
comment2.params=
comment2.target=int\ next()
comment2.text=\r\n\ @return\ the\ element\ after\ the\ last\ element\ returned\r\n
comment3.params=
comment3.target=int\ previous()
comment3.text=\r\n\ @return\ the\ element\ before\ the\ last\ element\ returned\r\n
comment4.params=item
comment4.target=void\ set(int)
comment4.text=\r\n\ Replaces\ the\ last\ element\ returned\ with\ the\ given\ item\r\n\ @param\ item\ the\ item\ to\ put\ in\ the\ list\r\n
comment5.params=
comment5.target=boolean\ hasNext()
comment5.text=\r\n\ @return\ true\ if\ there\ is\ an\ element\ after\ the\ last\ one\ returned\ (false\ otherwise)\r\n
comment6.params=
comment6.target=boolean\ hasPrevious()
comment6.text=\r\n\ @return\ true\ if\ there\ is\ an\ element\ before\ the\ last\ one\ returned\ (false\ otherwise)\r\n
comment7.params=obj
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\r\n\ @return\ true\ if\ the\ given\ object\ is\ an\ iterator\ pointing\ to\ the\ same\ location\ as\ this\r\n
comment8.params=other
comment8.target=boolean\ before(SimpleListIterator)
comment8.text=\r\n\ @return\ true\ if\ the\ given\ iterator\ is\ pointing\ to\ a\ location\ before\ this\r\n
comment9.params=
comment9.target=SimpleListIterator\ clone()
comment9.text=\r\n\ @return\ a\ new\ iterator\ pointing\ to\ the\ same\ location\ as\ this\r\n
numComments=11
